# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

strategy:
    matrix:
       linux:
          imageName: "ubuntu-16.04"
       mac:
          imageName: "macos-10.13"
       windows:
          imageName: "vs2017-win2016"
    maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
- task: DownloadBuildArtifacts@0
  -inputs:
    buildType: 'specific'
    project: 'GoogleTest'
    pipeline: 'GoogleTest'
    artifactName: 'gtest_lib'
    downloadPath: '.'

# Linux
- bash: |
        mkdir build
        cd build
        cmake ..
        make
  condition: eq( variables['Agent.OS'], 'Linux') 
  displayName: 'Install Pre-Request in Linux'


# macOS
- bash: |
     brew install git cmake opencv eigen cgal libomp
     git clone https://github.com/strasdat/Sophus.git
     cd Sophus
     mkdir build
     cd build
     cmake ..
     make install
     cd ../..
     git clone https://github.com/google/googletest.git
     cd googletest
     cmake .
     make install
     cd ..
  condition: eq( variables['Agent.OS'], 'Darwin')
  displayName: 'Pre-request MacOS'

- bash: |
     mkdir build
     cd build
     cmake ..
     make

  condition: eq( variables['Agent.OS'], 'Darwin')
  displayName: 'Compile In MacOS'

- bash: |
     ls
     ./build/test_main

  condition: eq( variables['Agent.OS'], 'Darwin')
  displayName: 'Run Test'



# Windows
- powershell: |
      echo "I am Windows"
  condition: eq( variables['Agent.OS'], 'Windows_NT')

